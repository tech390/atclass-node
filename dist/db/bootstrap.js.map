{"version":3,"sources":["../../src/db/bootstrap.js"],"names":["Bootstrap","runMigrations","Log","info","knex","migrate","latest","err","error","dbBootstrap"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;;;IAIaA,S,WAAAA,S;;;;;;;oCACG;AACR,kBAAM,KAAKC,aAAL,EAAN;;AAEA;AACA;AACA;AACA;AAEH;;;8CAEqB;AAClB,gBAAI;AACAC,8BAAIC,IAAJ,CAAS,oBAAT;AACA;AACA,sBAAMC,eAAKC,OAAL,CAAaC,MAAb,EAAN;AACH,aAJD,CAIE,OAAOC,GAAP,EAAY;AACVL,8BAAIM,KAAJ,CAAU,4BAAV,EAAwCD,GAAxC;AACA,sBAAMA,GAAN;AACH;AACJ;;;;;;AAIE,IAAME,oCAAc,IAAIT,SAAJ,EAApB","file":"bootstrap.js","sourcesContent":["import knex from './knex';\r\nimport {\r\n    Log\r\n} from '../services';\r\n\r\nexport class Bootstrap {\r\n    async run() {\r\n        await this.runMigrations();\r\n\r\n        // await knex.transaction(async function (trx) {\r\n        //     const migrations = await trx.raw('select name from AtClass_knex_migrations');\r\n        //     // Log.info('migrations', migrations);\r\n        // });\r\n\r\n    }\r\n\r\n    async runMigrations() {\r\n        try {\r\n            Log.info('running migrations');\r\n            // await knex.migrate.rollback(10);\r\n            await knex.migrate.latest();\r\n        } catch (err) {\r\n            Log.error('running migrations failed.', err);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const dbBootstrap = new Bootstrap();"]}